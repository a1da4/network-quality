# 巨大な遅延時間を発生しているノードを発見する
from pprint import pprint

import numpy as np

N = 21
hops = [
    [0, 4, 4, 4, 4, 5, 5, 4, 5, 5, 4, 4, 2, 1, 3, 3, 4, 4, 3, 2, 3],
    [4, 0, 2, 4, 4, 5, 5, 4, 5, 5, 4, 4, 4, 3, 1, 3, 4, 4, 3, 2, 3],
    [4, 2, 0, 4, 4, 5, 5, 4, 5, 5, 4, 4, 4, 3, 1, 3, 4, 4, 3, 2, 3],
    [4, 4, 4, 0, 2, 5, 5, 4, 5, 5, 4, 4, 4, 3, 3, 1, 4, 4, 3, 2, 3],
    [4, 4, 4, 2, 0, 5, 5, 4, 5, 5, 4, 4, 4, 3, 3, 1, 4, 4, 3, 2, 3],
    [5, 5, 5, 5, 5, 0, 2, 3, 4, 4, 5, 5, 5, 4, 4, 4, 1, 3, 4, 3, 2],
    [5, 5, 5, 5, 5, 2, 0, 3, 4, 4, 5, 5, 5, 4, 4, 4, 1, 3, 4, 3, 2],
    [4, 4, 4, 4, 4, 3, 3, 0, 3, 3, 4, 4, 4, 3, 3, 3, 2, 2, 3, 2, 1],
    [5, 5, 5, 5, 5, 4, 4, 3, 0, 2, 5, 5, 5, 4, 4, 4, 3, 1, 4, 3, 2],
    [5, 5, 5, 5, 5, 4, 4, 3, 2, 0, 5, 5, 5, 4, 4, 4, 3, 1, 4, 3, 2],
    [4, 4, 4, 4, 4, 5, 5, 4, 5, 5, 0, 2, 4, 3, 3, 3, 4, 4, 1, 2, 3],
    [4, 4, 4, 4, 4, 5, 5, 4, 5, 5, 2, 0, 4, 3, 3, 3, 4, 4, 1, 2, 3],
    [2, 4, 4, 4, 4, 5, 5, 4, 5, 5, 4, 4, 0, 1, 3, 3, 4, 4, 3, 2, 3],
    [1, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 1, 0, 2, 2, 3, 3, 2, 1, 2],
    [3, 1, 1, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 2, 0, 2, 3, 3, 2, 1, 2],
    [3, 3, 3, 1, 1, 4, 4, 3, 4, 4, 3, 3, 3, 2, 2, 0, 3, 3, 2, 1, 2],
    [4, 4, 4, 4, 4, 1, 1, 2, 3, 3, 4, 4, 4, 3, 3, 3, 0, 2, 3, 2, 1],
    [4, 4, 4, 4, 4, 3, 3, 2, 1, 1, 4, 4, 4, 3, 3, 3, 2, 0, 3, 2, 1],
    [3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 1, 1, 3, 2, 2, 2, 3, 3, 0, 1, 2],
    [2, 2, 2, 2, 2, 3, 3, 2, 3, 3, 2, 2, 2, 1, 1, 1, 2, 2, 1, 0, 1],
    [3, 3, 3, 3, 3, 2, 2, 1, 2, 2, 3, 3, 3, 2, 2, 2, 1, 1, 2, 1, 0],
]
print(f"{len(hops)} times {len(hops[0])}")
for i in range(N):
    for j in range(N):
        assert hops[i][j] == hops[j][i], f"DistanceDoesNotMatch {i}, {j}"

routes = [
    [0, 13, 19, 20, 17, 8],
    [1, 14, 19, 18, 11],
    [2, 14, 19, 20, 16, 6],
    [3, 15, 19, 13, 12],
    [4, 15, 19, 18, 10],
    [5, 16, 20, 7],
    [9, 17, 20, 19, 13, 12],
    [6, 16, 20, 17, 9],
    [7, 20, 19, 14, 2],
    [8, 17, 20, 19, 15, 4],
]
R = np.zeros([len(routes), N])
for i, route in enumerate(routes):
    for node in route:
        R[i][node] += 1
pprint(f"routes: {routes}")
print(R)
